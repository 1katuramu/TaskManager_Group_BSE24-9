name: CI/CD Pipeline

# Trigger the workflow on push and pull requests to main and develop branches
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # Frontend Build and Test Job
  frontend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./client
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install frontend dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint
    
    - name: Run frontend tests with coverage
      run: npm run test:coverage
    
    - name: Build frontend
      run: npm run build
    
    - name: Upload frontend build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: client/build/
        retention-days: 30
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: frontend-coverage
        path: client/coverage/
        retention-days: 30

  # Backend Build and Test Job
  backend:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./server
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: server/package-lock.json
    
    - name: Install backend dependencies
      run: npm ci
    
    - name: Run backend tests with coverage
      run: npm run test:coverage
    
    - name: Upload backend coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: backend-coverage
        path: server/coverage/
        retention-days: 30

  # Integration Tests Job
  integration-tests:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        cd server && npm ci
        cd ../client && npm ci
    
    - name: Start backend server
      run: |
        cd server
        npm start &
        sleep 10
    
    - name: Test API endpoints
      run: |
        curl -f http://localhost:5000/tasks || exit 1
        echo "✅ API endpoints are working"
    
    - name: Test frontend build with backend
      run: |
        cd client
        npm run build
        echo "✅ Frontend build successful with backend integration"

  # Code Quality Check Job
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint on entire project
      run: npm run lint
    
    - name: Check code formatting
      run: |
        echo "Checking for common code quality issues..."
        find . -name "*.js" -not -path "./node_modules/*" -exec echo "Checking {}" \;